constexpr char HtmlFile[] = "<!DOCTYPE html>\n<html>\n\n<head>\n	<meta charset=\"utf-8\">\n	<meta name=\"viewport\" content=\"width=device-width,initial-scale=1,user-scalable=no\" />\n	<title>文件管理</title>\n</head>\n\n<body>\n	<div>\n		<input type=\"file\" id=\"fileUploadInput\" />\n		<br />\n		<button id=\"fileUploadButton\" multiple>上传至此处</button>\n		<button id=\"refresh\" multiple>刷新</button>\n	</div>\n	<br />\n	<div>\n		<input type=\"text\" id=\"newFloorNameInput\" />\n		<br />\n		<button id=\"newFloorButton\" multiple>新建文件夹</button>\n	</div>\n	<br />\n	<div id=\"explorer\">\n		正在加载...\n	</div>\n</body>\n\n<script>\n	let fileUploadElement = document.getElementById(\"fileUploadInput\");\n	let newFloorElement = document.getElementById(\"newFloorNameInput\");\n	let fileExplorerElement = document.getElementById(\"explorer\")\n\n	let place = \"/\";\n	const splitChar = '\\n';\n\n	function cd(path) {\n		if (path[path.length - 1] != '/') return;\n		if (path == '../') {\n			var i = place.length;\n			while (i >= 0) {\n				if (place[i] == '/') break;\n				else i--;\n			}\n			i--;\n			while (i >= 0) {\n				if (place[i] == '/') break;\n				else i--;\n			}\n			i++;\n			if (i <= 0) place = \"/\";\n			else place = place.substring(0, i);\n		}\n		else {\n			place += path.toString();\n		}\n		load();\n	}\n\n	function deleteFile(path) {\n		var request = new XMLHttpRequest();\n		request.open(\"DELETE\", place + path);\n		request.onload = load;\n		request.send(place + path);\n	}\n\n	function deletePath(path) {\n		if (path == \"/\") return;\n		var request = new XMLHttpRequest();\n		request.open(\"DELETE\", place);\n		request.onload = cd(\"../\");\n		request.send(place);\n	}\n\n	function update(files) {\n\n		if (files[0] == \"\" && place != \"/\") {\n			explorer.innerHTML = (\"<button onclick=\\'cd(\\\"../\\\")\\'>\" + place.toString() + \"</button> <button onclick='deletePath(\\\"\" + place.toString() + \"\\\")'>删除文件夹</button>\");\n			return;\n		}\n		explorer.innerHTML = \"<button onclick='cd(\\\"../\\\")'>\" + place.toString() + \"</button><br/>\";\n\n		let file = \"\";\n		for (i = 0; i < files.length; i++) {\n			if (files[i][files[i].length - 1] == '/') {\n				file = \"<button onclick='cd(\\\"\" + files[i].toString() + \"\\\")'>\"\n					+ files[i].toString() + \"</button> <br/>\";\n			}\n			else {\n				file = \"<button onclick='window.open(\\\"..\" + place + files[i].toString() + \"\\\")'>\"\n					+ files[i].toString() + \"</button> \";\n				file += \"<button onclick='deleteFile(\\\"\" + files[i].toString() + \"\\\")'>删除</button> <br/>\";\n			}\n			explorer.innerHTML += file;\n		}\n	}\n\n	function load() {\n		explorer.innerHTML = \"正在读取\\\"\" + place.toString() + \"\\\"中的文件\";\n		var request = new XMLHttpRequest();\n		request.open(\"POST\", \"/api/floor\");\n		request.onload = function () { update(this.responseText.split(splitChar)); };\n		request.send(place);\n	}\n\n	function upload(place, value) {\n		var request = new XMLHttpRequest();\n		request.open(\"PUT\", place);\n		request.onload = load;\n		request.send(value);\n	}\n\n	function uploadPressed() {\n		let file = fileUploadElement.files[0];\n		let reader = new FileReader();\n		let path = place;\n		path += file.name;\n		reader.onload = function Fileloaded() {\n			upload(path, this.result);\n		}\n		reader.readAsArrayBuffer(file);\n	}\n\n	function newFloor() {\n		let path = newFloorElement.value.toString();\n		if (path.includes(\"/\")) {\n			console.log(\"path: \\\"\" + path + \"\\\" is invalid\");\n			return;\n		}\n		var request = new XMLHttpRequest();\n		request.open(\"PUT\", place.toString() + path + \"/\");\n		request.onload = load;\n		request.send(\"\");\n	}\n\n	document.getElementById(\"fileUploadButton\").addEventListener(\"click\", uploadPressed);\n	document.getElementById(\"newFloorButton\").addEventListener(\"click\", newFloor);\n	document.getElementById(\"refresh\").addEventListener(\"click\", load);\n	load();\n	console.log(\"\\\"file.js\\\" loaded\");\n</script>\n\n<style>\n	a:link {\n		text-decoration: none;\n	}\n\n	a:visited {\n		text-decoration: none;\n	}\n\n	a:hover {\n		text-decoration: underline;\n	}\n\n	a:active {\n		text-decoration: underline;\n	}\n\n	body {\n		background-color: #c2dadf;\n	}\n</style>\n\n</html>";